name: Software Composition Analysis

on:
 # Runs when a pull request review is being submitted
  pull_request:

  # Run this workflow manually from Actions tab
  workflow_dispatch:
    inputs:
      branch_to_test:
        description: 'Branch or tag to run test'
        required: true
        default: 'main'
        type: string

# Allow one concurrent deployment
concurrency:
  group: ${{ github.repository }}-${{ github.workflow }}
  cancel-in-progress: true

jobs:
  software-composition-analysis:

    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:

    - name: Checkout Code (Pull_Request_Review)
      # if: github.event_name == 'pull_request_review'
      uses: actions/checkout@v3
      with:
          ref: ${{ github.event.pull_request.head.ref }}
          repository: ${{ github.event.pull_request.head.repo.full_name }}
          submodules: recursive

    - name: Checkout Code (Workflow_Dispatch)
      if: github.event_name == 'workflow_dispatch'
      uses: actions/checkout@v3
      with:
          ref: ${{ inputs.branch_to_test }}

    - name: Set Branch Variable (Pull_Request_Review)
      # if: github.event_name == 'pull_request_review'
      run: |
          echo "BRANCH=branch" >> "$GITHUB_ENV"

    - name: Set Branch Variable (Workflow_Dispatch)
      if: github.event_name == 'workflow_dispatch'
      run: |
          echo "BRANCH=${{ inputs.branch_to_test }}" >> "$GITHUB_ENV"

    - name: Install & Scan MOONSHOT UI
      run: |
          npm install
          bash <(curl -s -L https://detect.synopsys.com/detect9.sh) --blackduck.url=https://blackduck.aipo-imda.net/ --blackduck.api.token=${{ secrets.BLACKDUCK_TOKEN }} --detect.detector.search.depth=10 --detect.project.name=aiverify-moonshot-ui --detect.project.version.name=$BRANCH --detect.source.path=. --detect.code.location.name="aiverify-moonshot-ui_$BRANCH" --detect.excluded.directories=/tests --blackduck.trust.cert=true
          cd ../